[
    { "name": "mkf", "detail": "float mkf (var int x)", "desc": "", "source": "float" },
    { "name": "toStringf", "detail": "string toStringf(var float x)", "desc": "", "source": "float" },
    { "name": "castFromIntf", "detail": "float castFromIntf(var int   f)", "desc": "", "source": "float" },
    { "name": "castToIntf", "detail": "int   castToIntf  (var float f)", "desc": "", "source": "float" },
    { "name": "Zylindervolumen", "detail": "int Zylindervolumen (var int radius, var int hoehe)", "desc": "", "source": "float" },
    { "name": "antwort", "detail": "void antwort ()", "desc": "", "source": "float" },
    { "name": "floattest", "detail": "void floattest()", "desc": "", "source": "float" },
    { "name": "_FLT_Build_Func", "detail": "int _FLT_Build_Func(var int codePtr, var int param1Ptr, var int param2Ptr, var int retValIsFloat, var int resultPtr)", "desc": "", "source": "float" },
    { "name": "mkf", "detail": "int mkf (var int x)", "desc": "", "source": "float" },
    { "name": "truncf", "detail": "int truncf (var int x)", "desc": "", "source": "float" },
    { "name": "addf", "detail": "int addf (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "mulf", "detail": "int mulf (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "divf", "detail": "int divf (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "sqrf", "detail": "int sqrf(var int f)", "desc": "", "source": "float" },
    { "name": "sqrtf", "detail": "int sqrtf(var int f)", "desc": "", "source": "float" },
    { "name": "negf", "detail": "int negf (var int x)", "desc": "", "source": "float" },
    { "name": "absf", "detail": "int absf (var int x)", "desc": "", "source": "float" },
    { "name": "subf", "detail": "int subf (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "roundf", "detail": "int roundf (var int x)", "desc": "", "source": "float" },
    { "name": "invf", "detail": "int invf (var int x)", "desc": "", "source": "float" },
    { "name": "fracf", "detail": "int fracf (var int p, var int q)", "desc": "", "source": "float" },
    { "name": "sqrtf_approx", "detail": "int sqrtf_approx(var int f) { return sqrtf(f); };", "desc": "", "source": "float" },
    { "name": "gf", "detail": "int gf (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "gef", "detail": "int gef (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "lef", "detail": "int lef (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "lf", "detail": "int lf (var int x, var int y)", "desc": "", "source": "float" },
    { "name": "castFromIntf", "detail": "float castFromIntf(var int   f) { f; };", "desc": "", "source": "float" },
    { "name": "castToIntf", "detail": "int   castToIntf  (var float f) { return MEM_ReadInt(_@f(f)); };", "desc": "", "source": "float" },
    { "name": "toStringf", "detail": "string toStringf(var int x)", "desc": "", "source": "float" },
    { "name": "printf", "detail": "void printf(var int x)", "desc": "", "source": "float" },

    { "name": "mkf", "detail": "float mkf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "roundf", "detail": "int roundf (var float x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "Zylindervolumen", "detail": "int Zylindervolumen (var int radius, var int hoehe)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "antwort", "detail": "void antwort ()", "desc": "", "source": "float_ohneIkarus" },
    { "name": "floattest", "detail": "void floattest()", "desc": "", "source": "float_ohneIkarus" },
    { "name": "HighestBitPos", "detail": "int HighestBitPos (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "extractExp", "detail": "int extractExp (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "extractMt", "detail": "int extractMt (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "packExp", "detail": "int packExp (var int exp)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "mkf", "detail": "int mkf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "truncf", "detail": "int truncf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "addf", "detail": "int addf (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "negf", "detail": "int negf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "absf", "detail": "int absf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "subf", "detail": "int subf (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "roundf", "detail": "int roundf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "mulf", "detail": "int mulf (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "divf", "detail": "int divf (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "invf", "detail": "int invf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "fracf", "detail": "int fracf (var int p, var int q)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "sqrtf_hlp", "detail": "int sqrtf_hlp (var int target, var int guess, var int steps)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "sqrtf", "detail": "int sqrtf (var int x)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "sqrtf_approx", "detail": "int sqrtf_approx(var int f)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "gf", "detail": "int gf (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "gef", "detail": "int gef (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "lef", "detail": "int lef (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "lf", "detail": "int lf (var int x, var int y)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "BuildNumberHlp", "detail": "string BuildNumberHlp (var string res, var int x, var int kommapos)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "BuildNumber", "detail": "string BuildNumber (var string res, var int x, var int kommapos)", "desc": "", "source": "float_ohneIkarus" },
    { "name": "printf", "detail": "void printf (var int x) {", "desc": "", "source": "float_ohneIkarus" },

    { "name": "MEM_CheckVersion", "detail": "int MEM_CheckVersion(var int base, var int major, var int minor)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SendToSpy", "detail": "void MEM_SendToSpy(var int errorType, var string text)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ErrorBox", "detail": "void MEM_ErrorBox(var string text)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PrintStackTrace", "detail": "void MEM_PrintStackTrace()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_HandleError", "detail": "void MEMINT_HandleError(var int errorType, var string text)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Error", "detail": "void MEM_Error(var string error)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Warn", "detail": "void MEM_Warn(var string warn)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Info", "detail": "void MEM_Info(var string info)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_AssertFail", "detail": "void MEM_AssertFail (var string assertFailText)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Debug", "detail": "void MEM_Debug(var string message)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPushInt", "detail": "int MEMINT_StackPushInt (var int val)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPushString", "detail": "string MEMINT_StackPushString (var string val)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPopInstSub", "detail": "MEMINT_HelperClass MEMINT_StackPopInstSub () {};", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPopInst", "detail": "void MEMINT_StackPopInst ()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPushInst", "detail": "void MEMINT_StackPushInst (var int val)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPushVar", "detail": "void MEMINT_StackPushVar (var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PopInt", "detail": "int    MEMINT_PopInt() {};", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PopString", "detail": "string MEMINT_PopString() {};", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPopInt", "detail": "int    MEMINT_StackPopInt() {};", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPopString", "detail": "string MEMINT_StackPopString() {};", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StackPopInstAsInt", "detail": "int    MEMINT_StackPopInstAsInt()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetMemHelper", "detail": "void MEMINT_GetMemHelper()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_SwitchG1G2", "detail": "int MEMINT_SwitchG1G2(var int g1Val, var int g2Val)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadInt", "detail": "int MEM_ReadInt (var int address)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadString", "detail": "string MEM_ReadString (var int address)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_OldWriteInt", "detail": "void MEMINT_OldWriteInt (var int address, var int val)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PrepareAssignments", "detail": "void MEMINT_PrepareAssignments()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_Assign", "detail": "void MEMINT_Assign()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_StrAssign", "detail": "void MEMINT_StrAssign()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteInt", "detail": "void MEM_WriteInt (var int address, var int val)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteString", "detail": "void MEM_WriteString (var int address, var string val)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadByte", "detail": "int MEM_ReadByte (var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteByte", "detail": "void MEM_WriteByte (var int adr, var int val)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadIntArray", "detail": "int MEM_ReadIntArray (var int arrayAddress, var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteIntArray", "detail": "void MEM_WriteIntArray (var int arrayAddress, var int offset, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadByteArray", "detail": "int MEM_ReadByteArray (var int arrayAddress, var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteByteArray", "detail": "void MEM_WriteByteArray (var int arrayAddress, var int offset, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadStringArray", "detail": "string MEM_ReadStringArray (var int arrayAddress, var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteStringArray", "detail": "void MEM_WriteStringArray (var int arrayAddress, var int offset, var string value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReinitParser", "detail": "void MEM_ReinitParser()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetParser", "detail": "void MEM_SetParser(var int ID)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_AssignInst", "detail": "void MEM_AssignInst (var int inst, var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_AssignInstNull", "detail": "void MEM_AssignInstNull (var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PtrToInst", "detail": "MEMINT_HelperClass MEM_PtrToInst (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "_^", "detail": "MEMINT_HelperClass _^ (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_NullToInst", "detail": "MEMINT_HelperClass MEM_NullToInst ()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CpyInst", "detail": "MEMINT_HelperClass MEM_CpyInst (var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_AssignContentInst", "detail": "void MEM_AssignContentInst (var int inst, var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_AssignContentInstNull", "detail": "void MEM_AssignContentInstNull (var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InstToPtr", "detail": "int MEM_InstToPtr(var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InstGetOffset", "detail": "int MEM_InstGetOffset (var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetCurrParserSymb", "detail": "void MEM_SetCurrParserSymb (var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InitLabels", "detail": "void MEM_InitLabels()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CallByPtr", "detail": "void MEM_CallByPtr(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CallByOffset", "detail": "void MEM_CallByOffset(var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetFuncID", "detail": "int MEM_GetFuncID(var func fnc)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetFuncOffset", "detail": "int MEM_GetFuncOffset(var func fnc)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetFuncPtr", "detail": "int MEM_GetFuncPtr(var func fnc)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReplaceFunc", "detail": "void MEM_ReplaceFunc(var func f1, var func f2)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_InitOverideFunc", "detail": "void MEMINT_InitOverideFunc(var func f)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_OFTok", "detail": "void MEMINT_OFTok(var int tok)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_OFTokPar", "detail": "void MEMINT_OFTokPar(var int tok, var int param)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetIntAddress", "detail": "int MEM_GetIntAddress(var int i)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetFloatAddress", "detail": "int MEM_GetFloatAddress(var float f)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetStringAddress", "detail": "int MEM_GetStringAddress(var string s)", "desc": "", "source": "Ikarus" },
    { "name": "_@", "detail": "int _@(var int i)", "desc": "", "source": "Ikarus" },
    { "name": "_@s", "detail": "int _@s(var string s)", "desc": "", "source": "Ikarus" },
    { "name": "_@f", "detail": "int _@f(var float f)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetAddress_Init", "detail": "void MEMINT_GetAddress_Init(var func f)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetAddress_Init", "detail": "void MEM_GetAddress_Init()", "desc": "", "source": "Ikarus" },
    { "name": "STR_GetAddressInit", "detail": "void STR_GetAddressInit()", "desc": "", "source": "Ikarus" },
    { "name": "STR_GetAddress", "detail": "int STR_GetAddress(var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ReadStatArr", "detail": "int  MEMINT_ReadStatArr(var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_WriteStatArr", "detail": "void MEMINT_WriteStatArr(var int offset, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_WriteStatStringArr", "detail": "void MEMINT_WriteStatStringArr(var int offset, var string value)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ReadStatStringArr", "detail": "string MEMINT_ReadStatStringArr(var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteStatArr", "detail": "void MEM_WriteStatArr (var int array, var int offset, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadStatArr", "detail": "int  MEM_ReadStatArr (var int array, var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteStatStringArr", "detail": "void MEM_WriteStatStringArr(var string array, var int offset, var string value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadStatStringArr", "detail": "string MEM_ReadStatStringArr(var string array, var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InitStatArrs", "detail": "void MEM_InitStatArrs()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Alloc", "detail": "int MEM_Alloc (var int amount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Free", "detail": "void MEM_Free (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_Push", "detail": "void ASMINT_Push(var int data)", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_Pop", "detail": "int ASMINT_Pop()", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_MyExternal", "detail": "void ASMINT_MyExternal() {};   /* the Symbol belonging to this function will become an external symbol */", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_CallMyExternal", "detail": "void ASMINT_CallMyExternal() { /* calls some external */", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_Init", "detail": "void ASMINT_Init()", "desc": "", "source": "Ikarus" },
    { "name": "ASM_Open", "detail": "void ASM_Open(var int space)", "desc": "", "source": "Ikarus" },
    { "name": "ASM", "detail": "void ASM (var int data, var int length)", "desc": "", "source": "Ikarus" },
    { "name": "ASM_1", "detail": "void ASM_1 (var int data) { ASM (data, 1); };", "desc": "", "source": "Ikarus" },
    { "name": "ASM_2", "detail": "void ASM_2 (var int data) { ASM (data, 2); };", "desc": "", "source": "Ikarus" },
    { "name": "ASM_3", "detail": "void ASM_3 (var int data) { ASM (data, 3); };", "desc": "", "source": "Ikarus" },
    { "name": "ASM_4", "detail": "void ASM_4 (var int data) { ASM (data, 4); };", "desc": "", "source": "Ikarus" },
    { "name": "ASM_Here", "detail": "int ASM_Here()", "desc": "", "source": "Ikarus" },
    { "name": "ASM_Close", "detail": "int ASM_Close()", "desc": "", "source": "Ikarus" },
    { "name": "ASM_Run", "detail": "void ASM_Run(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "ASM_RunOnce", "detail": "void ASM_RunOnce()", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_PushContext", "detail": "void ASMINT_PushContext()", "desc": "", "source": "Ikarus" },
    { "name": "ASMINT_PopContext", "detail": "void ASMINT_PopContext()", "desc": "", "source": "Ikarus" },
    { "name": "EngineFunc_Wrapper", "detail": "int EngineFunc_Wrapper(var int this, var int param)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_Open", "detail": "void CALL_Open()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_Begin", "detail": "int CALL_Begin(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_Close", "detail": "int CALL_Close()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_End", "detail": "int CALL_End()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_IntParam", "detail": "void CALL_IntParam(var int param)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_PtrParam", "detail": "void CALL_PtrParam (var int param)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_FloatParam", "detail": "void CALL_FloatParam (var int param)", "desc": "", "source": "Ikarus" },
    { "name": "CALLINT_PushString", "detail": "string CALLINT_PushString (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "CALLINT_GetStringAddress", "detail": "int CALLINT_GetStringAddress (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_zStringPtrParam", "detail": "void CALL_zStringPtrParam (var string param)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_cStringPtrParam", "detail": "void CALL_cStringPtrParam (var string param)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_StructParam", "detail": "void CALL_StructParam (var int ptr, var int words)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValIsStruct", "detail": "void CALL_RetValIsStruct (var int size)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValIszString", "detail": "void CALL_RetValIszString()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValIsFloat", "detail": "void CALL_RetValIsFloat()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_PutRetValTo", "detail": "void CALL_PutRetValTo(var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValAsInt", "detail": "int CALL_RetValAsInt  () { return +CALLINT_Result; };", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValAsFloat", "detail": "int CALL_RetValAsFloat() { return +CALLINT_Result; };", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValAsPtr", "detail": "int CALL_RetValAsPtr  () { return +CALLINT_Result; };", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValAsStructPtr", "detail": "MEMINT_HelperClass CALL_RetValAsStructPtr()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValAszStringPtr", "detail": "string CALL_RetValAszStringPtr()", "desc": "", "source": "Ikarus" },
    { "name": "CALL_RetValAszString", "detail": "string CALL_RetValAszString()", "desc": "", "source": "Ikarus" },
    { "name": "CALLINT_makecall", "detail": "void CALLINT_makecall (var int adr, var int cleanStack)", "desc": "", "source": "Ikarus" },
    { "name": "CALL__stdcall", "detail": "void CALL__stdcall (var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "CALL__cdecl", "detail": "void CALL__cdecl (var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "CALL__thiscall", "detail": "void CALL__thiscall (var int this, var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "CALL__fastcall", "detail": "void CALL__fastcall (var int ecx, var int edx, var int adr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetShowDebug", "detail": "void MEM_SetShowDebug (var int on)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CopyBytes", "detail": "void MEM_CopyBytes (var int src, var int dst, var int byteCount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CopyWords", "detail": "void MEM_CopyWords (var int src, var int dst, var int wordcount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Copy", "detail": "void MEM_Copy (var int src, var int dst, var int wordcount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SwapBytes", "detail": "void MEM_SwapBytes(var int src, var int dst, var int byteCount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Swap", "detail": "void MEM_Swap(var int src, var int dst, var int wordCount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SwapWords", "detail": "void MEM_SwapWords(var int src, var int dst, var int wordCount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Clear", "detail": "void MEM_Clear(var int ptr, var int size)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Realloc", "detail": "int MEM_Realloc (var int ptr, var int oldsize, var int newsize)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CompareBytes", "detail": "int MEM_CompareBytes(var int ptr1, var int ptr2, var int byteCount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CompareWords", "detail": "int MEM_CompareWords(var int ptr0, var int ptr1, var int wordCount)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Compare", "detail": "int MEM_Compare(var int ptr0, var int ptr1, var int wordCount)", "desc": "", "source": "Ikarus" },
    { "name": "LoadLibrary", "detail": "int LoadLibrary (var string lpFileName)", "desc": "", "source": "Ikarus" },
    { "name": "GetProcAddress", "detail": "int GetProcAddress (var int hModule, var string lpProcName)", "desc": "", "source": "Ikarus" },
    { "name": "FindKernelDllFunction", "detail": "int FindKernelDllFunction (var string name)", "desc": "", "source": "Ikarus" },
    { "name": "VirtualProtect", "detail": "int VirtualProtect (var int lpAddress, var int dwSize, var int flNewProtect)", "desc": "", "source": "Ikarus" },
    { "name": "MemoryProtectionOverride", "detail": "void MemoryProtectionOverride (var int address, var int size)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_MessageBox", "detail": "int MEM_MessageBox (var string txt, var string caption, var int type)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InfoBox", "detail": "void MEM_InfoBox (var string txt)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayCreate", "detail": "int MEM_ArrayCreate ()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayFree", "detail": "void MEM_ArrayFree(var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayClear", "detail": "void MEM_ArrayClear (var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArraySize", "detail": "int MEM_ArraySize(var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayWrite", "detail": "void MEM_ArrayWrite(var int zCArray_ptr, var int pos, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayRead", "detail": "int MEM_ArrayRead(var int zCArray_ptr, var int pos)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayInsert", "detail": "void MEM_ArrayInsert (var int zCArray_ptr, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayPush", "detail": "void MEM_ArrayPush (var int zCArray_ptr, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayPop", "detail": "int MEM_ArrayPop(var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayTop", "detail": "int MEM_ArrayTop(var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayIndexOf", "detail": "int MEM_ArrayIndexOf(var int zCArray_ptr, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayRemoveIndex", "detail": "void MEM_ArrayRemoveIndex (var int zCArray_ptr, var int index)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayRemoveValue", "detail": "void MEM_ArrayRemoveValue (var int zCArray_ptr, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayRemoveValueOnce", "detail": "void MEM_ArrayRemoveValueOnce (var int zCArray_ptr, var int value)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_QSort", "detail": "void MEMINT_QSort(var int base, var int num, var int size, var int comparator)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArraySort", "detail": "void MEM_ArraySort(var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayUnique", "detail": "void MEM_ArrayUnique(var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ArrayToString", "detail": "string MEM_ArrayToString (var int zCArray_ptr)", "desc": "", "source": "Ikarus" },
    { "name": "STR_GetCharAt", "detail": "int STR_GetCharAt (var string str, var int pos)", "desc": "", "source": "Ikarus" },
    { "name": "STR_Len", "detail": "int STR_Len (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "STR_toChar", "detail": "int STR_toChar (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "STRINT_toChar", "detail": "int STRINT_toChar (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "STR_FromChar", "detail": "string STR_FromChar(var int char)", "desc": "", "source": "Ikarus" },
    { "name": "STR_SubStr", "detail": "string STR_SubStr (var string str, var int start, var int count)", "desc": "", "source": "Ikarus" },
    { "name": "STR_Prefix", "detail": "string STR_Prefix (var string str, var int len)", "desc": "", "source": "Ikarus" },
    { "name": "STR_Compare", "detail": "int STR_Compare(var string str1, var string str2)", "desc": "", "source": "Ikarus" },
    { "name": "STR_ToInt", "detail": "int STR_ToInt (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "STR_IndexOf", "detail": "int STR_IndexOf(var string str, var string tok)", "desc": "", "source": "Ikarus" },
    { "name": "STRINT_SplitReset", "detail": "void STRINT_SplitReset()", "desc": "", "source": "Ikarus" },
    { "name": "STRINT_Split", "detail": "void STRINT_Split(var string Str, var string seperator)", "desc": "", "source": "Ikarus" },
    { "name": "STRINT_SplitGet", "detail": "string STRINT_SplitGet(var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "STR_Split", "detail": "string STR_Split(var string str, var string separator, var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "STR_SplitCount", "detail": "int STR_SplitCount(var string str, var string seperator)", "desc": "", "source": "Ikarus" },
    { "name": "STR_Upper", "detail": "string STR_Upper(var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetBuf_8K_Sub", "detail": "int MEMINT_GetBuf_8K_Sub()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetBuf_8K", "detail": "int MEMINT_GetBuf_8K()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_FindParserSymbol", "detail": "int MEM_FindParserSymbol (var string inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetSymbolIndex", "detail": "int MEM_GetSymbolIndex(var string inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetParserSymbol", "detail": "int MEM_GetParserSymbol (var string inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetSymbol", "detail": "int MEM_GetSymbol(var string inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetSymbolByIndex", "detail": "int MEM_GetSymbolByIndex(var int id)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PushIntParam", "detail": "int MEMINT_PushIntParam(var int param)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PushIntParam", "detail": "void MEM_PushIntParam (var int param)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PushInstParam", "detail": "void MEM_PushInstParam (var int inst)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PushStringParamSub", "detail": "string MEMINT_PushStringParamSub (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PushStringParam", "detail": "void MEM_PushStringParam (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PopIntResult", "detail": "int    MEM_PopIntResult   () {};", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PopStringResult", "detail": "string MEM_PopStringResult() {};", "desc": "", "source": "Ikarus" },
    { "name": "MEM_PopInstResult", "detail": "MEMINT_HelperClass MEM_PopInstResult() {};", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CallByID", "detail": "void MEM_CallByID (var int symbID)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_CallByString", "detail": "void MEM_CallByString (var string fnc)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Call", "detail": "void MEM_Call(var func fnc)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_BuildFuncStartsArray", "detail": "int MEMINT_BuildFuncStartsArray()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetFuncIDByOffset", "detail": "int MEM_GetFuncIDByOffset(var int offset)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetESP", "detail": "int MEMINT_GetESP()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_IsFrameBoundary", "detail": "int MEMINT_IsFrameBoundary(var int ESP)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_FindFrameBoundary", "detail": "int MEMINT_FindFrameBoundary(var int ESP, var int searchWordsMAX)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetFrameBoundary", "detail": "int MEM_GetFrameBoundary()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetCallerStackPos", "detail": "int MEM_GetCallerStackPos()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetCallerStackPos", "detail": "void MEM_SetCallerStackPos(var int popPos)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_TokenizeFunction", "detail": "void MEMINT_TokenizeFunction(var int funcID, var int tokenArray, var int paramArray, var int posArr)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_TraceParameter", "detail": "int MEMINT_TraceParameter(var int pos, var int tokenArr, var int paramArr)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetLabelName", "detail": "string MEMINT_GetLabelName(var int labelValue)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PrepareLoopsAndJumps", "detail": "void MEMINT_PrepareLoopsAndJumps(var int stackPos)", "desc": "", "source": "Ikarus" },
    { "name": "while", "detail": "void while(var int b)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Label", "detail": "void MEM_Label(var int lbl) {}; /* nothing to do */", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Goto", "detail": "void MEM_Goto (var int lbl)", "desc": "", "source": "Ikarus" },
    { "name": "Repeat", "detail": "void Repeat(var int variable, var int limit)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_Repeat", "detail": "void MEMINT_Repeat()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InitRepeat", "detail": "void MEM_InitRepeat()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_RepeatEntryFiddle", "detail": "void MEMINT_RepeatEntryFiddle(/* var int VAR */ var int limit, var int loopData)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_RepeatRedoCheck", "detail": "int MEMINT_RepeatRedoCheck(var int loopData)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetMenuByString", "detail": "int MEM_GetMenuByString (var string menuName)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetMenuItemByString", "detail": "int MEM_GetMenuItemByString (var string menuItemName)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InitGlobalInst", "detail": "void MEM_InitGlobalInst()", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCMobFire", "detail": "int Hlp_Is_oCMobFire (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_zCMover", "detail": "int Hlp_Is_zCMover(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCMob", "detail": "int Hlp_Is_oCMob(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCMobInter", "detail": "int Hlp_Is_oCMobInter(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCMobLockable", "detail": "int Hlp_Is_oCMobLockable(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCMobContainer", "detail": "int Hlp_Is_oCMobContainer(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCMobDoor", "detail": "int Hlp_Is_oCMobDoor(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCNpc", "detail": "int Hlp_Is_oCNpc (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_oCItem", "detail": "int Hlp_Is_oCItem (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "Hlp_Is_zCVobLight", "detail": "int Hlp_Is_zCVobLight (var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetClassDef", "detail": "int MEM_GetClassDef (var int objPtr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetClassName", "detail": "string MEM_GetClassName (var int objPtr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InsertVob", "detail": "int MEM_InsertVob(var string vis, var string wp)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_DeleteVob", "detail": "void MEM_DeleteVob(var int vobPtr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetBufferCRC32", "detail": "int MEM_GetBufferCRC32 (var int buf, var int buflen)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetStringHash", "detail": "int MEM_GetStringHash (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_GetWorldHashBucket", "detail": "int MEMINT_GetWorldHashBucket (var int hash)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SearchVobByName", "detail": "int MEM_SearchVobByName (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SearchAllVobsByName", "detail": "int MEM_SearchAllVobsByName (var string str)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_RenameVob", "detail": "void MEM_RenameVob (var int vobPtr, var string newName)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_VobGetEM", "detail": "int MEMINT_VobGetEM(var int vobPtr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_TriggerVob", "detail": "void MEM_TriggerVob (var int vobPtr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_UntriggerVob", "detail": "void MEM_UntriggerVob (var int vobPtr)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_KeyPressed", "detail": "int MEM_KeyPressed(var int key)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_KeyState", "detail": "int MEM_KeyState(var int key)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InsertKeyEvent", "detail": "void MEM_InsertKeyEvent(var int key)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_OPT_FindEntry", "detail": "int MEMINT_OPT_FindEntry(var string optname)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_OPT_FindSection", "detail": "int MEMINT_OPT_FindSection (var string sectname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetGothOpt", "detail": "string MEM_GetGothOpt (var string sectionname, var string optionname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GothOptSectionExists", "detail": "int MEM_GothOptSectionExists (var string sectionname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GothOptExists", "detail": "int MEM_GothOptExists (var string sectionname, var string optionname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetModOpt", "detail": "string MEM_GetModOpt (var string sectionname, var string optionname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ModOptSectionExists", "detail": "int MEM_ModOptSectionExists (var string sectionname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ModOptExists", "detail": "int MEM_ModOptExists (var string sectionname, var string optionname)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetCommandLine", "detail": "string MEM_GetCommandLine ()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetGothOpt", "detail": "void MEM_SetGothOpt (var string section, var string option, var string value)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ApplyGothOpt", "detail": "void MEM_ApplyGothOpt()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_HexCharToInt", "detail": "int MEMINT_HexCharToInt(var int c)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_KeyStringToKey", "detail": "int MEMINT_KeyStringToKey(var string hex)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetKey", "detail": "int MEM_GetKey(var string name)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetSecondaryKey", "detail": "int MEM_GetSecondaryKey(var string name)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ByteToKeyHex", "detail": "string MEMINT_ByteToKeyHex(var int byte)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetKeys", "detail": "void MEM_SetKeys(var string name, var int primary, var int secondary)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetKey", "detail": "void MEM_SetKey(var string name, var int key)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_SetSecondaryKey", "detail": "void MEM_SetSecondaryKey(var string name, var int key)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetSystemTime", "detail": "int MEM_GetSystemTime()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_GetPerformanceCounter", "detail": "int MEM_GetPerformanceCounter()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_Benchmark_Helper", "detail": "void MEMINT_Benchmark_Helper()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_Benchmark", "detail": "int MEMINT_Benchmark(var func f, var int times, var int unit)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_BenchmarkMS", "detail": "int MEM_BenchmarkMS(var func f)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_BenchmarkMS_N", "detail": "int MEM_BenchmarkMS_N(var func f, var int n)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_BenchmarkMMS", "detail": "int MEM_BenchmarkMMS(var func f)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_BenchmarkMMS_N", "detail": "int MEM_BenchmarkMMS_N(var func f, var int n)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_BenchmarkPC", "detail": "int MEM_BenchmarkPC(var func f)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_BenchmarkPC_N", "detail": "int MEM_BenchmarkPC_N(var func f, var int n)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_SendToSpy_Implementation", "detail": "void MEMINT_SendToSpy_Implementation(var int errorType, var string text)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PrintStackTraceLine", "detail": "void MEMINT_PrintStackTraceLine(var int popPos)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_PrintStackTrace_Implementation", "detail": "void MEMINT_PrintStackTrace_Implementation()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ExceptionHandler", "detail": "void MEMINT_ExceptionHandler()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_SetupExceptionHandler", "detail": "void MEMINT_SetupExceptionHandler()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ReplaceLoggingFunctions", "detail": "void MEMINT_ReplaceLoggingFunctions()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_ReadInt_", "detail": "void MEM_ReadInt_()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_WriteInt_", "detail": "void MEM_WriteInt_()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_InitFasterReadWrite", "detail": "void MEMINT_InitFasterReadWrite()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_InitFasterPushInst", "detail": "void MEMINT_InitFasterPushInst()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Alloc_", "detail": "int MEM_Alloc_(var int ele)", "desc": "", "source": "Ikarus" },
    { "name": "MEM_Free_", "detail": "void MEM_Free_(var int ptr)", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ReplaceSlowFunctions", "detail": "void MEMINT_ReplaceSlowFunctions()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_VersionError", "detail": "void MEMINT_VersionError()", "desc": "", "source": "Ikarus" },
    { "name": "MEMINT_ReportVersionCheck", "detail": "int MEMINT_ReportVersionCheck()", "desc": "", "source": "Ikarus" },
    { "name": "MEM_InitAll", "detail": "void MEM_InitAll()", "desc": "", "source": "Ikarus" }
]